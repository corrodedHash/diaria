name: Continuous Integration

on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main

jobs:
  lint:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with: { python-version: "3.12" }

    - name: Install codespell
      run: pip3 install codespell

    - name: Install cmake
      run: sudo apt-get update
        && sudo apt-get install -y cmake clang-format

    - name: Lint
      run: cmake -D FORMAT_COMMAND=clang-format -P cmake/lint.cmake

    - name: Spell check
      if: always()
      run: cmake -P cmake/spell.cmake

  sanitize:
    runs-on: ubuntu-22.04
    container: ubuntu:24.10

    env: { CXX: clang++-19, DEBIAN_FRONTEND: noninteractive }

    steps:
    - uses: actions/checkout@v4

    - name: Install CMake
      run: >-
        apt-get update
        && apt-get install cmake clang++-19 libsodium-dev llvm-19-tools git catch2 python3-pytest -q -y
        && ln -s /usr/bin/FileCheck-19 /usr/bin/FileCheck
        && ln -s /usr/lib/llvm-19/build/utils/lit/lit.py /usr/bin/lit

    - name: Configure
      run: cmake --preset=ci-sanitize

    - name: Build
      run: cmake --build build/sanitize -j 2

    - name: Test
      working-directory: build/sanitize
      env:
        ASAN_OPTIONS: "strict_string_checks=1:\
          detect_stack_use_after_return=1:\
          check_initialization_order=1:\
          strict_init_order=1:\
          detect_leaks=1:\
          halt_on_error=1"
        UBSAN_OPTIONS: "print_stacktrace=1:\
          halt_on_error=1"
      run: ctest --output-on-failure --no-tests=error -j 2

  test:
    runs-on: ubuntu-22.04
    container: ubuntu:24.10

    env: { CXX: clang++-19, DEBIAN_FRONTEND: noninteractive }


    steps:
    - uses: actions/checkout@v4

    - name: Install cmake and static analyzers
      run: >-
        apt-get update
        && apt-get install clang-tidy-19 clang-19 cppcheck cmake libsodium-dev llvm-19-tools git catch2 python3-pytest -y -q
        && ln -s /usr/bin/FileCheck-19 /usr/bin/FileCheck
        && ln -s /usr/lib/llvm-19/build/utils/lit/lit.py /usr/bin/lit

        update-alternatives --install
        /usr/bin/clang-tidy clang-tidy
        /usr/bin/clang-tidy-19 140

    - name: Configure
      run: cmake --preset=ci-ubuntu

    - name: Build
      run: cmake --build build --config Release -j 2

    - name: Install
      run: cmake --install build --config Release --prefix prefix

    - name: Test
      working-directory: build
      run: ctest --output-on-failure --no-tests=error -C Release -j 2

  coverage:
    # needs: [test]

    runs-on: ubuntu-22.04
    container: ubuntu:24.10
    env: { CXX: clang++-19, DEBIAN_FRONTEND: noninteractive }


    steps:
    - uses: actions/checkout@v4

    - name: Install requirements
      run: >- 
        apt-get update
        && apt-get install clang-tidy-19 clang-19 cppcheck cmake libsodium-dev llvm-19-tools git llvm nodejs catch2 python3-pytest -y -q
        && ln -s /usr/bin/FileCheck-19 /usr/bin/FileCheck
        && ln -s /usr/bin/clang++-19 /usr/bin/clang++
        && ln -s /usr/lib/llvm-19/build/utils/lit/lit.py /usr/bin/lit

    - name: Configure
      run: cmake --preset=ci-coverage

    - name: Build
      run: cmake --build build/coverage -j 2

    - name: Test
      working-directory: build/coverage
      run: ctest --output-on-failure --no-tests=error -j 2

    - name: Process coverage info
      run: cmake --build build/coverage -t coverage

    - uses: actions/upload-artifact@v4
      with:
        name: coverage_report
        path: build/coverage/coverage_html
